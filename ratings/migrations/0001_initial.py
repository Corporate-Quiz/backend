# Generated by Django 4.2.2 on 2023-08-05 09:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ratings.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achivment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название достижения')),
                ('description', models.TextField(verbose_name='Описание достижения')),
                ('image', models.ImageField(blank=True, upload_to='achivments/image/', verbose_name='изображение')),
                ('num_of_completed', models.PositiveIntegerField(default=0, verbose_name='Завершенных квизов')),
                ('num_of_passed', models.PositiveIntegerField(default=0, verbose_name='Пройденных квизов')),
                ('num_of_failed', models.PositiveIntegerField(default=0, verbose_name='Проваленных квизов')),
                ('num_of_assigned', models.PositiveIntegerField(default=0, verbose_name='Пройденных назначенных квизов')),
                ('num_of_questions', models.PositiveIntegerField(default=0, verbose_name='Отвечено вопросов')),
                ('num_of_right_questions', models.PositiveIntegerField(default=0, verbose_name='Правильно отвеченных вопросов')),
                ('num_of_wrong_questions', models.PositiveIntegerField(default=0, verbose_name='Неверно отвеченных вопросов')),
                ('time_in_quizes', models.PositiveIntegerField(default=0, verbose_name='Время прохождения пройденных квизов (сек)')),
                ('level', models.PositiveIntegerField(default=0, verbose_name='Уровень пользователя')),
            ],
            options={
                'verbose_name': 'Достижение',
                'verbose_name_plural': 'Достижения',
            },
        ),
        migrations.CreateModel(
            name='UserLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(unique=True, verbose_name='Уровень пользователя')),
                ('description', models.CharField(blank=True, max_length=100, verbose_name='Описание уровня')),
                ('to_level_up', models.PositiveIntegerField(default=1, verbose_name='Квизов для перехода на следующий уровень')),
                ('image', models.ImageField(blank=True, upload_to='user_levels/image/', verbose_name='изображение')),
                ('prev_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_level', to='ratings.userlevel', verbose_name='Предыдущий уровень')),
            ],
            options={
                'verbose_name': 'Уровень пользователя',
                'verbose_name_plural': 'Уровени пользователей',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='UserAchvment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_to_get', models.PositiveIntegerField(default=0, verbose_name='Очков для получения')),
                ('points_now', models.PositiveIntegerField(default=0, verbose_name='Набранно очков')),
                ('achived', models.BooleanField(default=False, verbose_name='Достижение получено')),
                ('get_date', models.DateField(blank=True, null=True, verbose_name='Дата получения достижения')),
                ('achivment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_achivments', to='ratings.achivment', verbose_name='Достижение')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_achivments', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Достижение пользователя',
                'verbose_name_plural': 'Достижения пользователей',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_completed', models.PositiveIntegerField(default=0, verbose_name='Завершенные квизы')),
                ('count_passed', models.PositiveIntegerField(default=0, verbose_name='Пройденные квизы')),
                ('count_assigned', models.PositiveIntegerField(default=0, verbose_name='Пройденные назначенные квизы')),
                ('count_failed', models.PositiveIntegerField(default=0, verbose_name='Проваленые квизы')),
                ('answered_questions', models.PositiveIntegerField(default=0, verbose_name='Отвеченных вопросов')),
                ('right_questions', models.PositiveIntegerField(default=0, verbose_name='Правильно отвеченных вопросов')),
                ('wrong_questions', models.PositiveIntegerField(default=0, verbose_name='Неверно отвеченных вопросов')),
                ('passed_time', models.PositiveIntegerField(default=0, verbose_name='Время пройденных квизов')),
                ('user_rating', models.PositiveIntegerField(default=0, verbose_name='Рейтинг пользователя')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('user_level', models.ForeignKey(default=ratings.models.UserLevel.get_default, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='rating', to='ratings.userlevel', verbose_name='Уровень пользователя')),
            ],
            options={
                'verbose_name': 'Рейтинг пользователя',
                'verbose_name_plural': 'Рейтинги пользователей',
                'ordering': ['-user_rating', 'passed_time'],
            },
        ),
        migrations.AddField(
            model_name='achivment',
            name='user',
            field=models.ManyToManyField(related_name='achivments', through='ratings.UserAchvment', to=settings.AUTH_USER_MODEL),
        ),
    ]
